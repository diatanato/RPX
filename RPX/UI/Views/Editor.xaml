<UserControl x:Class="RPX.UI.Views.Editor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:RPX.UI.ViewModels" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="850">
    <UserControl.DataContext>
        <vm:EditorModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <Style x:Key="ColorRectangleStyle" TargetType="Rectangle">
            <Style.Setters>
                <Setter Property="Fill" Value="White" />
                <Setter Property="Stroke" Value="Black" />
                <Setter Property="StrokeThickness" Value="2" />
                <Setter Property="RadiusX" Value="5" />
                <Setter Property="RadiusY" Value="5" />
                <Setter Property="Margin" Value="10,0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform x:Name="transform"/>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="15" ShadowDepth="0"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                
                <!--<EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RadiusX" To="10"/>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RadiusY" To="10"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RadiusX"/>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RadiusY"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>-->

                <!--<EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="transform" Storyboard.TargetProperty="ScaleX" To="1.1"/>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="transform" Storyboard.TargetProperty="ScaleY" To="1.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1"/>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>-->

            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid ShowGridLines="True">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="150"/>
        </Grid.RowDefinitions>
        <ContentControl Content="{Binding Content.Value, Mode=OneWay}"/>
        <Path Data="M10,0 L280,0" Fill="Black" Grid.Row="1" Margin="20,0" Stretch="Fill" Stroke="Black" VerticalAlignment="Center" StrokeThickness="2"/>
        <StackPanel x:Name="Pedalboard"  Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="80" Orientation="Horizontal">
            <Button x:Name="wah" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Wah, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="25" Height="60" RenderTransformOrigin="0.5,0.5"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="compressor" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Compressor, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="modulation_pre" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Modulation, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="distortion" Command="{Binding ShowDistortionEditorCommand, Mode=OneWay}" Visibility="{Binding Distortion, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="amplifier" Command="{Binding ShowAmplifierEditorCommand, Mode=OneWay}" Visibility="{Binding Amplifier, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="120" Height="40"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="cabinet" Command="{Binding ShowCabinetEditorCommand, Mode=OneWay}" Visibility="{Binding Cabinet, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="60" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="noise_gate" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding NoiseGate, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="equalizer" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Equalizer, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="volume_pre" Command="{Binding ShowEditorCommand, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="25" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="modulation_post" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Modulation, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="delay" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Delay, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="reverb" Command="{Binding ShowEditorCommand, Mode=OneWay}" Visibility="{Binding Reverb, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="40" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="volume_post" Command="{Binding ShowEditorCommand, Mode=OneWay}">
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle Style="{StaticResource ColorRectangleStyle}" Width="25" Height="60"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>